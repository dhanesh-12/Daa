def DP_Knapsack(capacity, weight, profit, n):
    k = [[0 for _ in range(capacity + 1)] for _ in range(n + 1)]
    for i in range(1, n + 1):
        for w in range(1, capacity + 1):
            if weight[i - 1] <= w:
                k[i][w] = max(profit[i - 1] + k[i - 1][w - weight[i - 1]], k[i - 1][w])
            else:
                k[i][w] = k[i - 1][w]
    return k[n][capacity]

n = int(input("Enter the number of items: "))
weight = []
profit = []
for i in range(n):
    w = int(input(f"Weight of item {i + 1}: "))
    p = int(input(f"Profit of item {i + 1}: "))
    weight.append(w)
    profit.append(p)
capacity = int(input("Enter the capacity of the knapsack: "))

max_profit = DP_Knapsack(capacity, weight, profit, n)
print("Maximum profit earned =", max_profit)
